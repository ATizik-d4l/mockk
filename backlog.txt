Ultra-minimal issue tracking
----------------------------
+removing final, no-args-consrtuctor byte code transformation
+matcher signature
+arguments: firstArg, secondArg, thirdArg, lastArg
+capturing: captureNullable(lst) .captured() extension
+verifyOrder { }, verifySequence { }
+slot.invoke(arg1, arg2, ... lastArg) for lambdas
+coroutines support
+stub(returnsMany, throws)
+clearMocks(answers, calls, mocks)
+verify(atLeast, atMost, nCalls)
+rename methods not to clash other mocking frameworks
+matchers: refEq, more, less, and, or, not, null(), nonNull(), any(isNull=true, ofType=Any)
+arrays support
+deep array equality matching
+child mock chained calls
+don't display "creating mock" in logs for "fake mocks"
+add some comments
+PR
+nulls
+++M1+++
+fixing spies
+spyk copy
unload companion object
extension function testing fun ChannelHandlerContext.scopeAttr()
Java 9 support
JUnit 5
pet project testing
DSL testing feature
static methods mocking
String matchers: startsWith, contains
split to separate files
mock: extraInterfaces, mock name
TODO: check all kinds of arrays
better human readable exceptions
---M2---
performance optimization: HashableMatcher
performance optimization: ProxyCache
performance optimization: Method mapping
check nanoTime is OK (otherwise counter)
Android
other JVMs
...